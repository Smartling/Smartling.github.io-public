---
 - file_type: 'Android XML'
   template: 'standard'
   extension: '.xml'
   smartling_identifier: 'android'
   download_sample: 'android.xml'
   resource_info: '<ul><li><a href="http://developer.android.com/guide/topics/resources/string-resource.html">Android String Resources</a></li><li><a href="http://developer.android.com/guide/topics/resources/localization.html">Android Localization</a></li></ul>'
   keys_variants: 'Every string is created with key/variant metadata, which is the value of the string.name attribute.  If the value of two strings is the same, but the string.name attribute is different, Smartling creates two strings.'
   string_instructions: 'String instructions can be set using the <a href="android_instruction_comments_enabled">instruction_comments_enabled</a> and <a href="android_instruction_attributes">instruction_attributes</a> directives'
   other: '<p>To exclude a string from translation use the translatable="FALSE" attribute and value in the string tag:</p><pre>&lt;string name=&quot;string_11&quot; translatable=&quot;FALSE&quot;&gt;This android string has been marked not to be translated with translable attribute.&lt;/string&gt;</pre>'
   directive_format: '&lt!-- smarling.[directive_name] = [value] --&gt'
   directive_instructions: 'The directive must be a single comment on one line, and there should not be any inline trailing symbols after the directive.  Directives apply to all strings that follow them. Directives can be changed throughout the file'
   directive_prefix: '&lt!-- '
   directive_suffix: ' --&gt'
   directives:
      - placeholder_format_custom
      - placeholder_format
      - instruction_comments_enabled
      - instruction_attributes

 - file_type: 'iOS String Files'
   template: 'standard'
   extension: '.strings'
   smartling_identifier: 'ios'
   download_sample: 'ios.strings'
   resource_info: '<a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/LoadingResources/Strings/Strings.html">String Resources</a>'
   keys_variants: 'Every string is created with key/variant metadata based on the keys in the file. If the ‘keys’ are different for two strings with the same value, Smartling will create two strings using the key as context metadata.'
   string_instructions: 'Smartling will automatically ingest and display file comments as instructions for translators. The comments must immediately precede the string. For example, for the following comment:<pre>/* Back button label */<br/>"Back" = "Back";</pre><p>the text "Back button label" will be captured as a file instruction</p>If the comment contains the following text:</p><pre>/* No comment provided by engineer. */</pre><p>or if a line separates the comment and string, such as:</p><pre>/* Back button label */<br/><br/>"Back" = "Back";</pre><p>Smartling will not create an instruction.</p>'
   directive_format: '/* smartling.[directive_name] = [value] */'
   directive_instructions: 'The directive must be a single comment on one line, and there should not be any inline trailing symbols after the directive.  Directives apply to all strings that follow them. Directives can be changed throughout the file'
   directive_prefix: '/* '
   directive_suffix: ' */'
   directives:
      - placeholder_format_custom
      - placeholder_format

 - file_type: 'iOS Stringsdict'
   template: 'standard'
   extension: '.stringsdict'
   smartling_identifier: 'stringsdict'
   download_sample: ''
   resource_info: '<ul><li><a href="https://developer.apple.com/library/ios/documentation/MacOSX/Conceptual/BPInternational/StringsdictFileFormat/StringsdictFileFormat.html">Stringsdict File Format</a></li><li><a href="https://developer.apple.com/library/ios/documentation/MacOSX/Conceptual/BPInternational/LocalizingYourApp/LocalizingYourApp.html">Localizing your App</a></li></ul>'
   intro: '<p>Smartling supports iOS .stringsdict format for plural sensitive content localization.<p>Note that Xcode’s XLIFF localization feature does not include plural strings. If your XLIFF-localized application includes plural strings, you will need to separately upload the .stringsdict file along with your XLIFF file.</p><p>This XML file format is used to capture the plural sensitive strings that will be localized.</p><p>Currently Smartling does not support gender-sensitive strings.</p><p>Smartling does not expect English source files with “zero” form source strings. Smartling complies strictly with CLDR which defines English as having two forms; “one” (singular) and “other” (plural). If you upload a source file with Zero form strings, the zero plural form will not be shown in the Smartling dashboard.</p><p>Complex plural strings (a.k.a. multiplurals) are supported, but Smartling advises against creating such strings which are difficult to translate correctly from a linguistic perspective.  If a multiplural string is in your .stringsdict Smartling will capture two separate strings, but they will not be associated with each other. We advise you to add instructions and visual context hints to help the translators understand how the multiplural string is actually used in your application.</p><p>No file API directives are supported.</p>'


 - file_type: 'Gettext PO/POT'
   template: 'standard'
   extension: '.pot / .po'
   smartling_identifier: 'gettext'
   download_sample: 'gettext.pot'
   resource_info: '<a href="http://www.gnu.org/software/gettext/">GNU Gettext Documentation</a>'
   keys_variants: '<p>Smartling also supports the msgctxt parameter that allows you to have Smartling capture a string as a variant.  When a gettext string includes msgctxt metadata it will be created as variant using the value of msgctxt.</p><p>For example:</p><pre>msgctxt "Home Page Menu Navigation"<br/>msgid "Home"<br/>msgstr ""<br/>msgctxt "Home Address Label"<br/>msgid "Home"<br/>msgstr ""</pre><p>Will result in two strings for translation, both with the value "Home". The translators can choose to to make the translation the same or not.  The value of msgctxt displays to translators in the Translation Interface and the Smartling Dashboard.  See the <a href="http://support.smartling.com/entries/22279686-about-variants-translation-management-system">Knowledge Base</a> for more on translation variants.<p>'
   string_instructions: 
   directive_format: '# smartling.[directive_name] = [value]'
   directive_instructions: 'The directive must be a single comment on one line, and there should not be any inline trailing symbols after the directive.  Directives apply to all strings that follow them. Directives can be changed throughout the file'
   directive_prefix: '# '
   directive_suffix: ''
   directives:
      - placeholder_format_custom
      - placeholder_format

 - file_type: 'HTML'
   template: 'standard'
   extension: '.html'
   smartling_identifier: 'html'
   download_sample: ''
   resource_info: '<a href="http://www.w3.org/TR/html5/">HTML5 Standards</a>'
   default_placeholders: ''
   keys_variants: Yes
   keys_variants_info: ''
   directive_style: set_throughout 
   directives:
      - placeholder_format_custom
      - force_inline_for_tags

 - file_type: 'Java Property Files'
   template: 'standard'
   extension: '.properties'
   smartling_identifier: 'javaProperties'
   download_sample: 'java.properties'
   resource_info: '<a href="http://docs.oracle.com/javase/tutorial/i18n/index.html">Java Localization Documentation</a>'
   default_placeholders: ''
   keys_variants: 'Yes'
   keys_variants_info: 'Keys are automatically captured as string metadata.'
   directive_style: 
   string_instructions: 
   directives:
      - placeholder_format_custom
      - placeholder_format
      - string_format
      - download_format

 - file_type: 'YAML'
   template: 'standard'
   extension: '.yml'
   smartling_identifier: 'yaml'
   download_sample: 'yaml.yml'
   resource_info: '<a href="http://guides.rubyonrails.org/i18n.html">Rails Internationalization</a>'
   default_placeholders: ''
   keys_variants: 
   keys_variants_info: ''
   directive_style: 
   string_instructions: 
   directives:
      - placeholder_format_custom
      - placeholder_format
      - plurals_detection
      - download_format
      - string_format_paths
      - 

 - file_type: 'XLIFF'
   template: 'standard'
   extension: '.xml'
   smartling_identifier: 'xliff'
   download_sample: 'xliff.xml'
   resource_info: '<ul><li><a href="http://en.wikipedia.org/wiki/XLIFF">Background on XLIFF</a></li><li><a href="http://docs.oasis-open.org/xliff/xliff-core/xliff-core.html">OASIS specification</a></li></ul>'
   default_placeholders: ''
   keys_variants: 
   keys_variants_info: ''
   directive_style: 
   string_instructions: 
   directives:
      - placeholder_format_custom

 - file_type: 'Custom XML'
   template: 'standard'
   extension: '.xml'
   smartling_identifier: 'xml'
   download_sample: 'customxml.xml'
   resource_info: '<a href="http://www.w3.org/standards/xml/">XML Standards</a>'
   intro: 'Smartling '
   keys_variants: 'Key and Variant metadata must be enabled and configured using the <a href="#xml_source_key_paths">source_key_paths</a> and <a href="#xml_variants_enabled">variants_enabled</a> directives.'
   directive_format: '&lt!-- smarling.[directive_name] = [value] --&gt'
   directive_prefix: '&lt!-- '
   directive_suffix: ' --&gt'
   string_instructions: 
   other: 
   directives:
      - translate_paths
      - string_format_paths
      - placeholder_format_custom
      - placeholder_format
      - sltrans
      - source_key_paths
      - variants_enabled

 - file_type: 'JSON'
   template: 'standard'
   extension: '.json'
   smartling_identifier: 'json'
   download_sample: 'json.json'
   resource_info: '<a href="http://json.org/">Official JSON Standards</a>'
   keys_variants: 'By default, the full path of keys leading to a string are captured as Key and Variant metadata. Custom key paths can be set and variant behavior turned off with directives'
   directives:
      - translate_mode
      - translate_paths
      - source_key_paths
      - placeholder_format_custom
      - placeholder_format
      - variants_enabled
      - string_format_paths

 - file_type: 'QT Linguists'
   template: 'standard'
   extension: '.tx'
   smartling_identifier: 'qt'
   download_sample: ''
   resource_info: '<a href="http://doc.qt.digia.com/4.5/linguist-ts-file-format.html">QT Linguist Docs</a>'
   default_placeholders: ''
   keys_variants: 
   keys_variants_info: ''
   directive_style: 
   string_instructions: 
   other: 'Smartling natively supports the plural forms from QT Linguist files.'
   directives:
      - placeholder_format_custom
      - placeholder_format

 - file_type: 'MadCap Lingo ZIP packages'
   template: 'standard'
   extension: ''
   smartling_identifier: ''
   download_sample: 'madcap.zip'
   resource_info: '<a href="http://www.madcapsoftware.com/products/lingo/">Madcap Lingo software</a>'
   keys_variants: 
   keys_variants_info: ''
   directive_style: 
   string_instructions: 


 - file_type: 'Office Open XML'
   template: 'standard'
   extension: '.docx, .xlsx, .pptx'
   smartling_identifier: 'docx'
   download_sample: ''
   resource_info: '<a href="http://msdn.microsoft.com/en-ca/office/bb265236.aspx">Open XML for Developers</a>'
   keys_variants: 
   keys_variants_info: ''
   directive_style: 
   string_instructions: 


 - file_type: 'InDesign Markup Language'
   template: 'standard'
   extension: '.idml'
   smartling_identifier: 'idml'
   download_sample: ''
   resource_info: '<a href="http://www.adobe.com/devnet/indesign/documentation.html#idml">InDesign Markup Language Resources</a>'
   keys_variants_info: ''
   directive_style: 
   string_instructions: 


 - file_type: 'Resx'
   template: 'standard'
   extension: '.resx and .resw'
   smartling_identifier: 'resx'
   download_sample: ''
   resource_info: '<a href="http://msdn.microsoft.com/en-us/library/ekyft91f%28v=vs.90%29.aspx">Microsoft Resx Resources</a>'
   default_placeholders: '<strong>{0}</strong>, <strong>{1}</strong>, etc'
   keys_variants: 
   keys_variants_info: ''
   directive_style: set_throughout
   directive_format: '<!-- smarling.[directive_name] = [value] -->'
   directive_instructions: 'The inline directive must be a single directive on one line within its own comment block, and there should not be any inline trailing symbols after the directive.'
   string_instructions: 'Smartling automatically captures RESX comments and makes them translator instructions.'
   directives:
      - placeholder_format_custom


 - file_type: 'Plain Text'
   template: 'standard'
   extension: '.txt'
   smartling_identifier: '.txt'
   download_sample: ''
   resource_info: '<a href=""></a>'
   intro: 'The plain text document format is a simple way to quickly translate text. Smartling considers each line of text in the document a single translation string.  Each string is considered unique by file - which means if two files have the exact same line of text - they will be captured as two separate strings. '
   keys_variants: 
   directive_style: API_Only
   directive_format: 'smarling.[directive_name] = [value]'
   directive_instructions: 'Unlike other file types, plain text does not support inline file directives as comments, in order to use a directive you must specify each directive using the <a href="later">file upload API</a>'
   string_instructions: 'Not supported'
   directives:
      - placeholder_format_custom
      - placeholder_format

 - file_type: 'CSV'
   template: 'standard'
   extension: '.csv'
   smartling_identifier: 'csv'
   download_sample: ''
   resource_info: '<a href="http://www.ietf.org/rfc/rfc4180.txt">Comma-Separated Values (CSV) files  RFC</a>'
   default_placeholders: ''
   keys_variants: 
   keys_variants_info: ''
   directive_style: set_once
   directive_format: '# smarling.[directive_name] = [value]'
   directive_instructions: 'Directives are specified using comments. Each directive must be a single comment on one line, and there should not be any inline trailing symbols after the directive. The directives must be defined at the top of the file, ahead of the csv content.'
   string_instructions: 'Set using <a href="later">string_instructions_paths</a> directive.'
   other: '<p>You may define values with and without quotations. For example:</p> <pre>value1, "Value 2"</pre> <p>If you want to use the symbol " inside quoted value you escape it with double quotes like:</p> <pre>"value""178"</pre> <p>which corresponds to the string: <strong?value"178</strong></p><p>Smartling offers several options for downloading CSV files. <a href="later">More info</a></p>'
   directives:
      - field_separator
      - string_encloser
      - string_format_paths
      - paths
      - translation_language_path
      - output_original_row
      - source_key_paths
      - placeholder_format
      - placeholder_format_custom
      - strip_instructions_on_download
      - first_row_header
      - string_instructions_paths
      - locales map


